name: Release

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Version and Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          COMMIT_MSG: ${{ github.event.head_commit.message }}
          COMMIT_AUTHOR: ${{ github.event.head_commit.author.name }}
        run: |
          # Failsafe: skip if commit is a release commit or from the bot
          if [[ "$COMMIT_MSG" == *"chore(release)"* ]]; then
            echo "Skipping release for release commit"
            exit 0
          fi
          if [[ "$COMMIT_AUTHOR" == "github-actions[bot]" ]]; then
            echo "Skipping release for bot commit"
            exit 0
          fi
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          npm version patch
          git push --follow-tags
          npm publish --access public

      - name: Get latest tag
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: ${{ steps.get_tag.outputs.tag }}
          body: ${{ env.COMMIT_MSG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 